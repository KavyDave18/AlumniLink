CREATE DATABASE AlumniLinkDB;
USE AlumniLinkDB;

CREATE TABLE Users (
    UserID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    Role ENUM('student', 'alumni', 'admin') DEFAULT 'student',
    PasswordHash VARCHAR(255) NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Alumni (
    AlumniID INT PRIMARY KEY,
    GraduationYear INT,
    Degree VARCHAR(100),
    Department VARCHAR(100),
    CurrentCompany VARCHAR(100),
    FOREIGN KEY (AlumniID) REFERENCES Users(UserID) ON DELETE CASCADE
);

CREATE TABLE Posts (
    PostID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT,
    Title VARCHAR(200),
    Content TEXT,
    ImageURL VARCHAR(255),
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE
);

CREATE TABLE Messages (
    MessageID INT AUTO_INCREMENT PRIMARY KEY,
    SenderID INT,
    ReceiverID INT,
    Content TEXT,
    SentAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (SenderID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (ReceiverID) REFERENCES Users(UserID) ON DELETE CASCADE
);

CREATE TABLE Events (
    EventID INT AUTO_INCREMENT PRIMARY KEY,
    Title VARCHAR(150),
    Description TEXT,
    Location VARCHAR(150),
    EventDate DATE,
    CreatedBy INT,
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserID) ON DELETE SET NULL
);

CREATE TABLE Jobs (
    JobID INT AUTO_INCREMENT PRIMARY KEY,
    Title VARCHAR(150),
    CompanyName VARCHAR(150),
    Description TEXT,
    Location VARCHAR(100),
    PostedBy INT,
    PostedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PostedBy) REFERENCES Users(UserID) ON DELETE SET NULL
);

CREATE TABLE Connections (
    ConnectionID INT AUTO_INCREMENT PRIMARY KEY,
    User1ID INT,
    User2ID INT,
    Status ENUM('pending', 'accepted', 'rejected') DEFAULT 'pending',
    RequestedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (User1ID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (User2ID) REFERENCES Users(UserID) ON DELETE CASCADE
);

CREATE TABLE Comments (
    CommentID INT AUTO_INCREMENT PRIMARY KEY,
    PostID INT,
    UserID INT,
    Content TEXT,
    CommentedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PostID) REFERENCES Posts(PostID) ON DELETE CASCADE,
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE
);

CREATE TABLE Donations (
    DonationID INT AUTO_INCREMENT PRIMARY KEY,
    DonorID INT,
    Amount DECIMAL(10, 2),
    Message TEXT,
    DonatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (DonorID) REFERENCES Users(UserID) ON DELETE SET NULL
);
